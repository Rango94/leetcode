'''
（1）子序列： 一个序列A ＝ a1,a2,……an,中任意删除若干项，剩余的序列叫做A的一个子序列。也可以认为是从序列A按原顺序保留任意若干项得到的序列。

例如：

对序列 1,3,5,4,2,6,8,7来说，序列3,4,8,7 是它的一个子序列。
对于一个长度为n的序列，它一共有2^n 个子序列，有(2^n – 1)个非空子序列。

请注意：子序列不是子集，它和原始序列的元素顺序是相关的。

（2）公共子序列 ： 顾名思义，如果序列C既是序列A的子序列，同时也是序列B的子序列，则称它为序列A和序列B的公共子序列。

例如：

对序列 1,3,5,4,2,6,8,7和序列 1,4,8,6,7,5 来说

序列1,8,7是它们的一个公共子序列。

请注意： 空序列是任何两个序列的公共子序列。
例如： 序列1,2,3和序列4,5,6的公共子序列只有空序列。

（3）最长公共子序列

A和B的公共子序列中长度最长的（包含元素最多的）叫做A和B的公共子序列。
仍然用序列1,3,5,4,2,6,8,7和序列1,4,8,6,7,5

它们的最长公共子序列是：

1,4,8,7
1,4,6,7

'''

def solution(A,B):
    if len(A)>1 and len(B)>1:
        if A[-1]==B[-1]:
            return solution(A[:-1],B[:-1])+[A[-1]]
        else:
            tmp0=solution(A[:-1],B)
            tmp1=solution(A,B[:-1])
            if len(tmp0)>len(tmp1):
                return tmp0
            else:
                return tmp1
    else:
        if len(A)==1 and A[-1] in B:
            return A
        elif len(B)==1 and B[-1] in A:
            return B
        else:
            return []
A=[1,2]
B=[2,3]

print(solution(A,B))